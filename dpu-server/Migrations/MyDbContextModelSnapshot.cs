// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dpu_server;

namespace dpu_server.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dpu_server.Models.Heatmap", b =>
                {
                    b.Property<int>("HeatmapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("HeatmapID");

                    b.ToTable("Heatmaps");
                });

            modelBuilder.Entity("dpu_server.Models.HeatmapReference", b =>
                {
                    b.Property<int>("HeatmapReferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeatmapID")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceX")
                        .HasColumnType("int");

                    b.Property<int>("ReferenceY")
                        .HasColumnType("int");

                    b.HasKey("HeatmapReferenceID");

                    b.HasIndex("ReferenceY")
                        .IsUnique();

                    b.ToTable("HeatmapReferences");
                });

            modelBuilder.Entity("dpu_server.Models.Reference", b =>
                {
                    b.Property<int>("ReferenceID")
                        .HasColumnType("int");

                    b.Property<int>("HeatmapID")
                        .HasColumnType("int");

                    b.Property<int>("RSSI1")
                        .HasColumnType("int");

                    b.Property<int>("RSSI2")
                        .HasColumnType("int");

                    b.Property<int>("RSSI3")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("ReferenceID");

                    b.HasIndex("HeatmapID")
                        .IsUnique();

                    b.ToTable("References");
                });

            modelBuilder.Entity("dpu_server.Models.HeatmapReference", b =>
                {
                    b.HasOne("dpu_server.Models.Heatmap", "Heatmap")
                        .WithOne("HeatmapReference")
                        .HasForeignKey("dpu_server.Models.HeatmapReference", "ReferenceY")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dpu_server.Models.Reference", b =>
                {
                    b.HasOne("dpu_server.Models.Heatmap", "Heatmap")
                        .WithOne("References")
                        .HasForeignKey("dpu_server.Models.Reference", "HeatmapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dpu_server.Models.HeatmapReference", "HeatmapReference")
                        .WithOne("Reference")
                        .HasForeignKey("dpu_server.Models.Reference", "ReferenceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
