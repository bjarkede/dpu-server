// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dpu_server;

namespace dpu_server.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200323102230_test4")]
    partial class test4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dpu_server.Models.Heatmap", b =>
                {
                    b.Property<int>("HeatmapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Strength")
                        .HasColumnType("real");

                    b.HasKey("HeatmapID");

                    b.ToTable("Heatmaps");

                    b.HasData(
                        new
                        {
                            HeatmapID = 1,
                            Strength = 1f
                        },
                        new
                        {
                            HeatmapID = 2,
                            Strength = 2f
                        },
                        new
                        {
                            HeatmapID = 3,
                            Strength = 3f
                        },
                        new
                        {
                            HeatmapID = 4,
                            Strength = 4f
                        },
                        new
                        {
                            HeatmapID = 5,
                            Strength = 2f
                        },
                        new
                        {
                            HeatmapID = 6,
                            Strength = 2f
                        },
                        new
                        {
                            HeatmapID = 7,
                            Strength = 3f
                        },
                        new
                        {
                            HeatmapID = 8,
                            Strength = 1f
                        },
                        new
                        {
                            HeatmapID = 9,
                            Strength = 4f
                        },
                        new
                        {
                            HeatmapID = 10,
                            Strength = 1f
                        });
                });

            modelBuilder.Entity("dpu_server.Models.Referencepoint", b =>
                {
                    b.Property<int>("ReferencepointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("HeatmapId")
                        .HasColumnType("int");

                    b.Property<int>("RSSI1")
                        .HasColumnType("int");

                    b.Property<int>("RSSI2")
                        .HasColumnType("int");

                    b.Property<int>("RSSI3")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("ReferencepointId");

                    b.HasIndex("HeatmapId")
                        .IsUnique();

                    b.ToTable("Referencepoints");

                    b.HasData(
                        new
                        {
                            ReferencepointId = 1,
                            Category = 1,
                            HeatmapId = 1,
                            RSSI1 = 1,
                            RSSI2 = 1,
                            RSSI3 = 5,
                            X = 1,
                            Y = 1
                        },
                        new
                        {
                            ReferencepointId = 2,
                            Category = 2,
                            HeatmapId = 2,
                            RSSI1 = 2,
                            RSSI2 = 2,
                            RSSI3 = 3,
                            X = 2,
                            Y = 2
                        },
                        new
                        {
                            ReferencepointId = 3,
                            Category = 3,
                            HeatmapId = 3,
                            RSSI1 = 3,
                            RSSI2 = 3,
                            RSSI3 = 5,
                            X = 3,
                            Y = 3
                        },
                        new
                        {
                            ReferencepointId = 4,
                            Category = 4,
                            HeatmapId = 4,
                            RSSI1 = 4,
                            RSSI2 = 2,
                            RSSI3 = 3,
                            X = 4,
                            Y = 4
                        },
                        new
                        {
                            ReferencepointId = 5,
                            Category = 5,
                            HeatmapId = 5,
                            RSSI1 = 5,
                            RSSI2 = 6,
                            RSSI3 = 3,
                            X = 5,
                            Y = 5
                        },
                        new
                        {
                            ReferencepointId = 6,
                            Category = 1,
                            HeatmapId = 6,
                            RSSI1 = 1,
                            RSSI2 = 2,
                            RSSI3 = 1,
                            X = 6,
                            Y = 6
                        },
                        new
                        {
                            ReferencepointId = 7,
                            Category = 2,
                            HeatmapId = 7,
                            RSSI1 = 2,
                            RSSI2 = 5,
                            RSSI3 = 3,
                            X = 7,
                            Y = 7
                        },
                        new
                        {
                            ReferencepointId = 8,
                            Category = 3,
                            HeatmapId = 8,
                            RSSI1 = 3,
                            RSSI2 = 2,
                            RSSI3 = 3,
                            X = 8,
                            Y = 8
                        },
                        new
                        {
                            ReferencepointId = 9,
                            Category = 2,
                            HeatmapId = 9,
                            RSSI1 = 2,
                            RSSI2 = 4,
                            RSSI3 = 3,
                            X = 9,
                            Y = 9
                        },
                        new
                        {
                            ReferencepointId = 10,
                            Category = 2,
                            HeatmapId = 10,
                            RSSI1 = 2,
                            RSSI2 = 3,
                            RSSI3 = 2,
                            X = 10,
                            Y = 10
                        });
                });

            modelBuilder.Entity("dpu_server.Models.Referencepoint", b =>
                {
                    b.HasOne("dpu_server.Models.Heatmap", "Heatmap")
                        .WithOne("Referencepoint")
                        .HasForeignKey("dpu_server.Models.Referencepoint", "HeatmapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
